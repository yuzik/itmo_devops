apiVersion: v1
kind: ConfigMap
metadata:
  name: jupyterhub-config
data:
  jupyterhub_config.py: |+
    # Configuration file for jupyterhub.
    import os
    c = get_config()  # noqa

    c.JupyterHub.db_url =  f"postgresql://{os.environ['POSTGRES_USER']}:{os.environ['POSTGRES_PASSWORD']}@database-service:5432/{os.environ['POSTGRES_DB']}"
---

apiVersion: v1
kind: Service
metadata:
  name: jupyterhub
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 8000
  selector:
    app: jupyterhub
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: jupyterhub
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jupyterhub
      image_from: local-dockerfile
  template:
    metadata:
      labels:
        app: jupyterhub
        image_from: local-dockerfile
    spec:
      initContainers:
        - name: dummy-init
          image: jupyterhub-img
          imagePullPolicy: Never
          command: ["echo", "kek!"]
      containers:
        - name: jupyterhub
          image: jupyterhub-img # build from local .Dockerfile
          imagePullPolicy: Never 
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          command: ["jupyterhub"]
          args: ["-f", "/etc/jupyterhub/jupyterhub_config.py"]
          volumeMounts:
            - name: jupyterhub-cfg
              mountPath: /etc/jupyterhub/jupyterhub_config.py
              subPath: jupyterhub_config.py
          livenessProbe:
            httpGet:
              path: /hub/api
              port: 8000
            initialDelaySeconds: 20
            periodSeconds: 10
      volumes:
        - name: jupyterhub-cfg
          configMap:
            name: jupyterhub-config